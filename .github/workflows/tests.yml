name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Python Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: fluxai_test
          POSTGRES_USER: fluxai
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with ruff
        run: |
          ruff check app/
        continue-on-error: true

      - name: Format check with black
        run: |
          black --check app/
        continue-on-error: true

      - name: Type check with mypy
        run: |
          mypy app/ --ignore-missing-imports
        continue-on-error: true

      - name: Run tests with pytest
        env:
          DATABASE_URL: postgresql+asyncpg://fluxai:test_password@localhost:5432/fluxai_test
          REDIS_URL: redis://localhost:6379/0
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: test_key
          AWS_SECRET_ACCESS_KEY: test_secret
          ENVIRONMENT: test
        run: |
          if [ -d "tests" ]; then
            pytest tests/ -v --cov=app --cov-report=xml --cov-report=term
          else
            echo "⚠️  No tests directory found. Skipping tests."
            echo "Create a 'tests/' directory and add test files to enable testing."
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.11' && hashFiles('coverage.xml') != ''
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

  lint-summary:
    name: Lint Summary
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff black mypy

      - name: Run all linters
        run: |
          echo "=== Running Ruff ==="
          ruff check app/ || true
          
          echo "=== Running Black ==="
          black --check app/ || true
          
          echo "=== Running MyPy ==="
          mypy app/ --ignore-missing-imports || true
          
          echo "=== Linting Complete ==="
